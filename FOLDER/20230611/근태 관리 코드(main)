	public void workManage() {		// 근태에 관련된 내용 관리 메뉴
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║        근태 관리 메뉴      ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("  1. 근태 기록 등록  2. 근태 기록 목록");
		System.out.println("  3. 연차 승인 등록  4. 연차 승인내역 목록 ");
		System.out.println("  5. 메인메뉴");
		System.out.println();
		System.out.print("  💡 선택(숫자 입력) >> ");
		
		int input = sc.nextInt();
		HrReadMain hrr = new HrReadMain();	// HrReadMain에 있는 목록 메서드 갖고오는 객체
		switch (input) {
		case 1:				// 1 입력 시 근태 기록 등록
			workWrite();		
			break;
		case 2:				// 2 입력 시 근태 기록 전체 목록
			hrr.workList();	
			break;
		case 3:				// 3 입력 시 연차 승인 내역 등록
			yearWrite();
			break;
		case 4:				// 4 입력 시 연차 승인 내역 목록
			hrr.yearAllList();
			break;
		case 5:				// 5 입력 시 메인메뉴로 돌아감
			pmMenu();
			break;
		default:			// 다른 값 입력 시 메시지 출력 후 다시 근태 관리 메뉴 메서드 호출
			System.out.println();
			System.out.println("--------------------------------");
		   	System.out.println("       1번 ~ 5번을 선택해주세요.     ");
		   	System.out.println("--------------------------------");
		   	System.out.println();
			workManage();
		} // switch-case end
		
	}
	
	public void workWrite() {	// 근태 기록 등록하는 메서드
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║        근태 기록 등록     ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("  < 근태 기록을 위한 정보를 입력해주세요.>");
		System.out.println();
		WorkVO wvo = new WorkVO();
		System.out.print("  1.직원번호 >> ");
			wvo.setEmid(sc.next());				// 입력받은 값을 YearVO의 emid setter에 저장
		System.out.print("  2.근속년수 >> ");
			wvo.setCont(sc.nextInt());
		System.out.print("  3.지각일수 >> ");
			wvo.setLate(sc.nextInt());
		System.out.print("  4.조퇴일수 >> ");
			wvo.setEarly(sc.nextInt());
		System.out.print("  5.결근일수 >> ");
			wvo.setAbs(sc.nextInt());
		System.out.print("  6.사용가능 연차일수 >> ");
			wvo.setAvAnn(sc.nextInt());
		System.out.print("  7.사용연차일수 >> ");
			wvo.setUsedAnn(sc.nextInt());
		System.out.print("  8.잔여연차일수 >> ");
			wvo.setUnusedAnn(sc.nextInt());
		System.out.println();

		if(wdao.workInsert(wvo)) {		// wdao에 있는 insert 메서드 호출(boolean 반환)
			System.out.println("--------------------------------");
			System.out.println("        등록이 완료되었습니다.      ");
			System.out.println("--------------------------------");
			System.out.println();
			workManage();						// 성공하면 관리 메뉴로 돌아감
		} else {
			System.out.println("--------------------------------");
			System.out.println("       정보 등록에 실패했습니다.     ");
			System.out.println("--------------------------------");
			System.out.println();
			workWrite();					// 실패하면 등록화면 다시 출력
		}

	}
	
	public void workModify(String emid) {	// 근태 기록 수정 메서드
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║       근태 기록 수정      ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("    < 수정할 내용을 입력해주세요 >  ");
		System.out.println();
		WorkVO wvo = wdao.WorkSelect(emid);		// 개별 조회한 데이터 wvo 객체에 담아 쓰기
		System.out.print("  1.근속년수 >> ");
			wvo.setCont(sc.nextInt());			// 수정할 내용 입력 받아서 setter로 받음
		System.out.print("  2.지각일수 >> ");
			wvo.setLate(sc.nextInt());	
		System.out.print("  3.조퇴일수 >> ");
			wvo.setEarly(sc.nextInt());	
		System.out.print("  4.결근일수 >> ");
			wvo.setAbs(sc.nextInt());	
		System.out.print("  5.사용가능 연차일수 >> ");
			wvo.setAvAnn(sc.nextInt());	
		System.out.print("  6.사용연차일수 >> ");
			wvo.setUsedAnn(sc.nextInt());	
		System.out.print("  7.잔여연차일수 >> ");
			wvo.setUnusedAnn(sc.nextInt());	
		System.out.println();
		
		if(wdao.WorkUpdate(wvo)) {		// update 실행 후 true 반환 시 완료 메시지 출력 후 메인 메뉴로 돌아감
			System.out.println("--------------------------------");
			System.out.println("       근태 기록이 수정되었습니다.    ");
			System.out.println("--------------------------------");
			workManage();
		} else {					// false 반환 시 실패 메시지 출력 후 수정 화면 다시 출력
		   	System.out.println("--------------------------------");
		   	System.out.println("         수정에 실패했습니다.       ");
		   	System.out.println("--------------------------------");
		   	workModify(emid);
		}
		
	}
	
	public void workRemove(String emid) {	// 근태 기록 삭제 메서드
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║        근태 기록 삭제     ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println(" < 삭제하려면 Y를 그렇지 않으면 N을 입력해주세요 >");
		System.out.println();
		System.out.print("  💡 입력 >> ");
		String input = sc.next();
		if(input.equalsIgnoreCase("Y")) { 	// Y를 선택했을 때 delete 실행
			if(wdao.WorkDelete(emid)) {	// delete 실행 후 true 반환 시 완료 메시지 출력 후 메인 메뉴로 돌아감
				System.out.println();
				System.out.println("--------------------------------");
				System.out.println("           삭제되었습니다.          ");
				System.out.println("--------------------------------");
				workManage();
			} else {				// false 반환 시 실패 메시지 출력 후 다시 삭제 화면 출력
				System.out.println();
				System.out.println("--------------------------------");
			   	System.out.println("         삭제에 실패했습니다.          ");
			   	System.out.println("--------------------------------");
			   	workRemove(emid);
			}
		} else if (input.equalsIgnoreCase("N")) {	// N을 선택했을 때 취소 메시지 출력 후 메인 메뉴로 돌아감
		   	System.out.println();
		   	System.out.println("--------------------------------");
		   	System.out.println("           취소되었습니다.          ");
		   	System.out.println("--------------------------------");
		   	workManage();
		} else {					// Y나 N을 입력하지 않은 경우 다시 삭제 화면 출력
		   	System.out.println();
		   	System.out.println("--------------------------------");
		   	System.out.println("         Y나 N을 입력해주세요          ");
		   	System.out.println("--------------------------------");	
			workRemove(emid);
		}

	}
	
	public void yearWrite() {	// 연차 승인 내역 등록 메서드
    System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║       연차 승인 등록      ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("    < 등록할 내용을 입력해주세요 >  ");
		System.out.println();
		YearVO yvo = new YearVO();
		System.out.print("  1.직원번호 >> ");
			yvo.setEmid(sc.next());
		System.out.print("  2.연차사용날짜 >> ");
			yvo.setYearDate(sc.next());
		System.out.print("  3.연차사용일수 >> ");
			yvo.setYearCnt(sc.nextInt());
		System.out.print("  4.연차승인자 >> ");
			yvo.setApp(sc.next());
		System.out.print("  5.연차승인일자 >> ");
			yvo.setAppDate(sc.next());
		System.out.println();
			if(ydao.yearInsert(yvo)) {		// ydao에 있는 insert 메서드 호출(boolean 반환)
				System.out.println("--------------------------------");
				System.out.println("       등록되었습니다.          ");
				System.out.println("--------------------------------");
				System.out.println();
				workManage();						// 성공하면 관리 메뉴로 돌아감
			} else {
				System.out.println("--------------------------------");
				System.out.println("     정보등록에 실패했습니다.   ");
				System.out.println("--------------------------------");
				System.out.println();
				yearWrite();					// 실패하면 등록화면 다시 출력
			}
		
	}
	
	public void yearModify(int emno) {	// 개인의 연차 승인 내역 수정 메서드
    System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║    연차 승인 내역 수정    ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("    < 수정할 내용을 입력해주세요 >  ");
		YearVO yvo = ydao.yearSelect(emno);
		System.out.println();
		System.out.print("  1.연차사용날짜 >> ");
			yvo.setYearDate(sc.next());
		System.out.print("  2.연차사용일수 >> ");
			yvo.setYearCnt(sc.nextInt());
		System.out.print("  3.연차승인자 >> ");
			yvo.setApp(sc.next());
		System.out.print("  4.연차승인일자 >> ");
			yvo.setAppDate(sc.next());
		System.out.println();	
			
		if(ydao.yearUpdate(yvo)) {		// update 실행 후 true 반환 시 완료 메시지 출력 후 메인 메뉴로 돌아감
			System.out.println("--------------------------------");
			System.out.println("         수정되었습니다.        ");
			System.out.println("--------------------------------");
			System.out.println();
			workManage();
		} else {					// false 반환 시 실패 메시지 출력 후 수정 화면 다시 출력
			System.out.println("--------------------------------");
			System.out.println("        수정에 실패했습니다.    ");
			System.out.println("--------------------------------");
			System.out.println();
			yearModify(emno);
		}	

	}
	
	public void yearRemove(int emno) {	// 개인의 연차 승인 내역 삭제 메서드
    System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║    연차 승인 내역 삭제    ║");
		System.out.println("  ╚═══════════════════════════╝");
    	System.out.println();
    	System.out.println(" < 삭제하려면 Y를 그렇지 않으면 N을 입력해주세요 >");
    	System.out.println();
		System.out.print("  💡 입력 >> ");
		String input = sc.next();
		if(input.equalsIgnoreCase("Y")) { 	// Y를 선택했을 때 delete 실행
			if(ydao.yeardelete(emno)) {		// delete 실행 후 true 반환 시 완료 메시지 출력 후 메인 메뉴로 돌아감
				System.out.println();
				System.out.println("--------------------------------");
				System.out.println("           삭제되었습니다.          ");
				System.out.println("--------------------------------");
				workManage();
			} else {				// false 반환 시 실패 메시지 출력 후 다시 삭제 화면 출력
				System.out.println();
				System.out.println("--------------------------------");
			   	System.out.println("         삭제에 실패했습니다.          ");
			   	System.out.println("--------------------------------");
			   	yearRemove(emno);
			}
		} else if (input.equalsIgnoreCase("N")) {	// N을 선택했을 때 취소 메시지 출력 후 메인 메뉴로 돌아감
		   	System.out.println();
		   	System.out.println("--------------------------------");
		   	System.out.println("           취소되었습니다.          ");
		   	System.out.println("--------------------------------");
		   	workManage();
		} else {					// Y나 N을 입력하지 않은 경우 다시 삭제 화면 출력
		   	System.out.println();
		   	System.out.println("--------------------------------");
		   	System.out.println("         Y나 N을 입력해주세요          ");
		   	System.out.println("--------------------------------");	
			yearRemove(emno);
		}
		
	}
