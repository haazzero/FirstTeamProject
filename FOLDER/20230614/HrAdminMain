package hr.main;

import java.util.Scanner;

import hr.dao.EmployeeDAO;
import hr.dao.HistoryDAO;
import hr.dao.ReviewDAO;
import hr.dao.SalaryInfoDAO;
import hr.dao.SalaryPaymentDAO;
import hr.dao.WorkDAO;
import hr.dao.YearDAO;
import hr.vo.EmployeeVO;
import hr.vo.HRSystemVO;

public class HrAdminMain {
	
	private Scanner sc;
	public static String id;
	private EmployeeDAO edao;
	private HistoryDAO hdao;
	private WorkDAO wdao;
	private YearDAO ydao;
	private SalaryInfoDAO sdao;
	private SalaryPaymentDAO spdao;
	private ReviewDAO rdao;
	private HRSystemVO hrsysVO;
	
	public HrAdminMain() {
		hrsysVO = new HRSystemVO();
		sc = new Scanner(System.in);
		edao = new EmployeeDAO();
		hdao = new HistoryDAO();
	}

	public void pmMenu() {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║            MENU           ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("  1. 직원 관리       2. 근태 관리      ");
		System.out.println("  3. 급여 조회       4. 인사고과 관리  ");
		System.out.println("  5. 비밀번호 변경    6. 시스템 종료    ");
	    System.out.println();
	    System.out.print("  💡 선택(숫자 입력) >> ");
	    int num = sc.nextInt();
	    System.out.println();
	    System.out.println("--------------------------------");
	   	System.out.println("    1번 ~ 6번을 선택해주세요.   ");
	   	System.out.println("--------------------------------");
	   	
	   	switch(num) {
	   		case 1 : emManage();
	   			break;
	   		case 2 : workManage();
	   			break;
	   		case 3 : 
	   			break;
	   		case 4 : revManage();
	   			break;
	   		case 5 : 
			new HRSystemMain().pwChange(hrsysVO);
	   			break;
	   		case 6 : new HRSystemMain().sysEnd();
	   	
	   	}
	}
	
	
	
	//직원관리 메뉴
	public void emManage() {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║        직원 관리 메뉴         ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("  1. 직원 정보 등록  2. 직원 전체 목록");
		System.out.println("  3. 히스토리 등록   4. 히스토리 목록");
		System.out.println("  5. 메인 메뉴 ");
		System.out.println();
		System.out.print("  💡 선택(숫자 입력) >> ");
		 
	    int input = sc.nextInt();   //키보드에서 메뉴 선택 받기
	    HrReadMain hrr = new HrReadMain();
	    
	    
	    switch (input) {
	    case 1:
	    	emWrite();
	    	break;
	    case 2:
	    	hrr.emList();
	    	break;
	    case 3:
	    	historyWrite();
	    	break;
	    case 4:
	    	hrr.hisAllList();
	    	break;
	    case 5:
	    	pmMenu();
	    	break;
	    }
		
		System.out.println();
		System.out.println("--------------------------------");
	   	System.out.println("    1번 ~ 5번을 선택해주세요.     ");
	   	System.out.println("--------------------------------");
		
	}
	
	
	//직원 정보 등록
	public void emWrite() {
		System.out.println("  ╔═══════════════════════════════════╗");  // 2칸씩
		System.out.println("  ║            직원 정보 등록             ║");
		System.out.println("  ╠═══════════════════════════════════║");
		System.out.println("  ║(예시)                              ║");
		System.out.println("  ║생년월일 >> YY.MM.DD                  ║");
		System.out.println("  ║연락처　>> 010-0000-0000              ║");
		System.out.println("  ║성별 >> 여성 | 남성                    ║");
		System.out.println("  ║입사일자 >> YY.MM.DD                  ║");
		System.out.println("  ║직급 >> 사원 | 대리 | 과장 | 부장         ║");
		System.out.println("  ╚═══════════════════════════════════╝");
		System.out.println();
		System.out.println("  < 등록할 직원의 정보를 입력해주세요> ");
		
		System.out.println();
		System.out.print("   1. 직원번호 >> ");
		String emid = sc.next();
		
		System.out.print("   2. 직원이름 >> ");
		String name = sc.next();
		
		System.out.print("   3. 생년월일 >> ");
		String birth = sc.next();
		
		System.out.print("   4. 연락처 >> ");
		String tel = sc.next();
		
		System.out.print("   5. 성별 >> ");
		String gen = sc.next();
		
		System.out.print("   6. 주소 >> ");
		String add = sc.next();
		
		System.out.print("   7. 입사일자 >> ");
		String join = sc.next();
		
		System.out.print("   8. 부서 이름 >> ");
		String dname = sc.next();
		
		System.out.print("   9. 직급 >> ");
		String position = sc.next();
		
		System.out.print("  10. 호봉 >> ");
		int hobong = sc.nextInt();

		
		EmployeeVO emvo = new EmployeeVO();
		emvo.setEmid(emid);
		emvo.setName(name);
		emvo.setBirth(birth);
		emvo.setTel(tel);
		emvo.setGen(gen);
		emvo.setAddr(add);
		emvo.setJoin(join);
		emvo.setDname(dname);
		emvo.setPosition(position);
		emvo.setHobong(hobong);
		
		System.out.println();
		
		boolean result = edao.emInsert(emvo);
		if (result == true) {
			System.out.println("----------------------------------");
			System.out.println("      입력하신 정보가 저장되었습니다. ");
			System.out.println("----------------------------------");
			System.out.println("----------------------------------");
			System.out.println("     직원관리 메뉴로 돌아갑니다.  ");
		   	System.out.println("----------------------------------");
		} else {
			System.out.println("----------------------------------");
		   	System.out.println("      정보 등록에 실패했습니다.  " );
		   	System.out.println("----------------------------------");
		   	System.out.println("----------------------------------");
		   	System.out.println("       정보 등록이 취소되었습니다.      ");
		   	System.out.println("----------------------------------");
		}
		
		pmMenu();		
	}
	
	
	
	
	// 직원 정보 수정
	public void emModify(String emid) {
		System.out.println("  ╔═══════════════════════════════════╗");  // 2칸씩
		System.out.println("  ║         직원 정보 수정                ║");
		System.out.println("  ╠═══════════════════════════════════║");
		System.out.println("  ║(예시)                              ║");
		System.out.println("  ║생년월일 >> YY.MM.DD                  ║");
		System.out.println("  ║연락처　>> 010-0000-0000              ║");
		System.out.println("  ║성별 >> 여성 | 남성                    ║");
		System.out.println("  ║입사일자 >> YY.MM.DD                  ║");
		System.out.println("  ║직급 >> 사원 | 대리 | 과장 | 부장         ║");
		System.out.println("  ╚═══════════════════════════════════╝");
		System.out.println();
		System.out.println("        < 정보를 수정하세요.>");
		System.out.println();

		System.out.print("   1. 직원이름 >> ");
		String name = sc.next();

		System.out.print("   2. 생년월일 >> ");
		String birth = sc.next();

		System.out.print("   3. 연락처 >> ");
		String tel = sc.next();

		System.out.print("   4. 성별 >> ");
		String gen = sc.next();

		System.out.print("   5. 주소 >> ");
		String addr = sc.next();

		System.out.print("   6. 입사일자 >> ");
		String join = sc.next();

		System.out.print("   7. 부서 이름 >> ");
		String dname = sc.next();

		System.out.print("   8. 직급 >> ");
		String position = sc.next();

		System.out.print("   9. 호봉 >> ");
		int hobong = sc.nextInt();

		System.out.println();
		
		EmployeeVO evo = edao.emSelect(emid);
		evo.setName(name);
		evo.setBirth(birth);
		evo.setTel(tel);
		evo.setGen(gen);
		evo.setAddr(addr);
		evo.setJoin(join);
		evo.setDname(dname);
		evo.setPosition(position);
		evo.setHobong(hobong);
		
		System.out.println();
		
		boolean result = edao.emUpdate(evo);
		if (result == true) {
		System.out.println("--------------------------------");
		System.out.println("        정보가 수정되었습니다.       ");
		System.out.println("--------------------------------");
		System.out.println("--------------------------------");
		System.out.println("     직원관리 메뉴로 돌아갑니다.      ");
	   	System.out.println("--------------------------------");
		} else {
	   	System.out.println("--------------------------------");
	   	System.out.println("         수정에 실패했습니다.       ");
	   	System.out.println("--------------------------------");
	   	System.out.println("--------------------------------");
		System.out.println("     직원관리 메뉴로 돌아갑니다.      ");
	   	System.out.println("--------------------------------");
	   	}
		
	   	System.out.println();
	   	pmMenu();
	}

	
	
	
	
	public void emRemove(String emid) {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║       직원 정보 삭제          ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println(" < 삭제하려면 Y를 그렇지 않으면 N을 입력해주세요 >");
		System.out.println();
		System.out.print("  💡 입력 >> ");
		
		String input = sc.next();
		if(input.equalsIgnoreCase("Y")) { 	// Y를 선택했을 때 delete 실행
			if(edao.emDelete(emid)) {		// delete 실행 후 true 반환 시 완료 메시지 출력 후 메인 메뉴로 돌아감
				System.out.println();
				System.out.println("--------------------------------");
				System.out.println("           삭제되었습니다.          ");
				System.out.println("--------------------------------");
				emManage();
			} else {				// false 반환 시 실패 메시지 출력 후 다시 삭제 화면 출력
				System.out.println();
				System.out.println("--------------------------------");
			   	System.out.println("         삭제에 실패했습니다.          ");
			   	System.out.println("--------------------------------");
			   	emRemove(emid);
			}
		} else if (input.equalsIgnoreCase("N")) {	// N을 선택했을 때 취소 메시지 출력 후 메인 메뉴로 돌아감
		   	System.out.println();
		   	System.out.println("--------------------------------");
		   	System.out.println("           취소되었습니다.          ");
		   	System.out.println("--------------------------------");
		   	emManage();
		} else {					// Y나 N을 입력하지 않은 경우 다시 삭제 화면 출력
		   	System.out.println();
		   	System.out.println("--------------------------------");
		   	System.out.println("         Y나 N을 입력해주세요          ");
		   	System.out.println("--------------------------------");	
			emRemove(emid);
		}
			
	}
	
	
	
	
	
	
	
	
	public void historyWrite() {
    	System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║       히스토리 등록           ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("  1. 직원 번호 >>");
		System.out.println("  2. 현재 부서 >> ");
		System.out.println("  3. 부서 등록 날짜 >> ");
		System.out.println("  4. 부서 이동 날짜 >> ");
		System.out.println("  5. 현재 직급 >> ");
		System.out.println("  6. 승진 날짜 >> ");
		System.out.println("  7. 휴직 시작 날짜 >> ");
		System.out.println("  8. 휴직 종료 날짜 >> ");
		System.out.println("  9. 비고 >> ");
		System.out.println();
		System.out.println("--------------------------------");
	   	System.out.println("        등록이 완료되었습니다.       ");
	   	System.out.println("--------------------------------");
		System.out.println("--------------------------------");
		System.out.println("         등록에 실패했습니다.       ");
	 	System.out.println("--------------------------------");
		
	}
	
	public void historyModify(String emid) {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║        히스토리 수정          ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("      수정할 내용을 입력해주세요  ");
		System.out.println();
		System.out.println("  1. 현재 부서 >> ");
		System.out.println("  2. 부서 등록 날짜 >> ");
		System.out.println("  3. 부서 이동 날짜 >> ");
		System.out.println("  4. 현재 직급 >> ");
		System.out.println("  5. 승진 날짜 >> ");
		System.out.println("  6. 휴직 시작 날짜 >> ");
		System.out.println("  7. 휴직 종료 날짜 >> ");
		System.out.println("  8. 비고 >> ");
		System.out.println();
		System.out.println("--------------------------------");
		System.out.println("     히스토리가 수정되었습니다.     ");
		System.out.println("--------------------------------");
	   	System.out.println("--------------------------------");
	   	System.out.println("       수정에 실패했습니다.       ");
	   	System.out.println("--------------------------------");
	   	System.out.println("--------------------------------");
	   	System.out.println("       수정이 취소되었습니다.      ");
	   	System.out.println("--------------------------------");
		
	}
	
	public void historyRemove(String emid) {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║        히스토리 삭제          ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println(" < 삭제하려면 Y를 그렇지 않으면 N을 입력해주세요 >");
		System.out.println();
		System.out.println("  💡 입력 >> ");
		System.out.println();
		System.out.println("------------------------------------");
		System.out.println("  삭제되었습니다. 직원관리 메뉴로 돌아갑니다.");  //자동연결 메뉴불러오기
		System.out.println("------------------------------------");
		System.out.println("------------------------------------");
		System.out.println("  취소되었습니다. 직원관리 메뉴로 돌아갑니다."); //자동연결 메뉴불러오기
		System.out.println("------------------------------------");
		
	}
	
	
	public void workManage() {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║       근태 관리 메뉴          ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("  1. 근태 기록 등록  2. 근태 기록 목록");
		System.out.println("  3. 연차 승인 등록  4. 연차 승인내역 목록 ");
		System.out.println("  5. 메인메뉴");
		System.out.println();
		 System.out.println("  💡 선택(숫자 입력) >> ");
		System.out.println();
		System.out.println("--------------------------------");
	   	System.out.println("       1번 ~ 5번을 선택해주세요.     ");
	   	System.out.println("--------------------------------");
	   	System.out.println();
		
	}
	
	public void workWrite() {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║        근태 기록 등록         ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("  < 근태 기록을 위한 정보를 입력해주세요.>");
		System.out.println();
		System.out.println("  1.직원번호 >>");
		System.out.println("  2.근속년수 >>");
		System.out.println("  3.지각일수 >>");
		System.out.println("  4.조퇴일수 >>");
		System.out.println("  5.결근일수 >>");
		System.out.println("  6.사용가능 연차일수 >>");
		System.out.println("  7.사용연차일수 >>");
		System.out.println("  8.잔여연차일수 >>");
		System.out.println();
		System.out.println("--------------------------------");
		System.out.println("        등록이 완료되었습니다.      ");
		System.out.println("--------------------------------");
		System.out.println("--------------------------------");
		System.out.println("       정보 등록에 실패했습니다.     ");
		System.out.println("--------------------------------");
	   	System.out.println("--------------------------------");
	   	System.out.println("       정보 등록이 취소되었습니다.      ");
	   	System.out.println("--------------------------------");
		System.out.println();
		
	}
	
	public void workModify(String emid) {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║       근태 기록 수정          ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("    < 수정할 내용을 입력해주세요 >  ");
		System.out.println();
		System.out.println("  1.근속년수 >>");
		System.out.println("  2.지각일수 >>");
		System.out.println("  3.조퇴일수 >>");
		System.out.println("  4.결근일수 >>");
		System.out.println("  5.사용가능 연차일수 >>");
		System.out.println("  6.사용연차일수 >>");
		System.out.println("  7.잔여연차일수 >>");
		System.out.println();
		System.out.println("--------------------------------");
		System.out.println("       근태 기록이 수정되었습니다.    ");
		System.out.println("--------------------------------");
	   	System.out.println("--------------------------------");
	   	System.out.println("         수정에 실패했습니다.       ");
	   	System.out.println("--------------------------------");
	
		
	}
	
	public void workRemove(String emid) {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║        근태 기록 삭제         ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println(" < 삭제하려면 Y를 그렇지 않으면 N을 입력해주세요 >");
		System.out.println();
		System.out.println("  💡 입력 >> ");
		System.out.println();
		System.out.println("--------------------------------");
		System.out.println("           삭제되었습니다.          ");
		System.out.println("--------------------------------");
	   	System.out.println("--------------------------------");
	   	System.out.println("           취소되었습니다.          ");
	   	System.out.println("--------------------------------");
	}
	
	public void yearWrite() {
    	System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║       연차 승인 등록          ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("    < 등록할 내용을 입력해주세요 >  ");
		System.out.println();
		System.out.println("  1.직원번호 >> ");
		System.out.println("  2.연차사용날짜 >> ");
		System.out.println("  3.연차사용일수 >> ");
		System.out.println("  4.연차승인자 >> ");
		System.out.println("  5.연차승인일자 >> ");
		System.out.println();
		System.out.println("--------------------------------");
		System.out.println("       등록되었습니다.          ");
		System.out.println("--------------------------------");
		System.out.println("--------------------------------");
		System.out.println("     정보등록에 실패했습니다.   ");
		System.out.println("--------------------------------");
		System.out.println();
		
	}
	
	public void yearModify(String emid) {
    	System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║    연차 승인 내역 수정          ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("    < 수정할 내용을 입력해주세요 >  ");
		System.out.println();
		System.out.println("  1.연차사용날짜   >>");
		System.out.println("  2.연차사용일수   >>");
		System.out.println("  3.연차승인자    >>");
		System.out.println("  4.연차승인일자   >>");
		System.out.println();
		System.out.println("--------------------------------");
		System.out.println("         수정되었습니다.        ");
		System.out.println("--------------------------------");
		System.out.println("--------------------------------");
		System.out.println("        수정에 실패했습니다.    ");
		System.out.println("--------------------------------");
		System.out.println();
	}
	
	public void yearRemove(String emid) {
    	System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║    연차 승인 내역 삭제         ║");
		System.out.println("  ╚═══════════════════════════╝");
    	System.out.println();
    	System.out.println(" < 삭제하려면 Y를 그렇지 않으면 N을 입력해주세요 >");
    	System.out.println();
		System.out.println("  💡 입력 >> ");
		System.out.println();
		System.out.println("--------------------------------");
		System.out.println("         삭제되었습니다.         ");
		System.out.println("--------------------------------");
	   	System.out.println("--------------------------------");
	   	System.out.println("         취소되었습니다.          ");
	   	System.out.println("--------------------------------");
	   	System.out.println();
		
	}
	
	public void revManage() {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║    인사 고과 관리 메뉴          ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("  1. 평가 등록  2. 평가 기록 목록");
		System.out.println("  3. 메인메뉴"                         );  
		System.out.println();
		 System.out.println("  💡 선택(숫자 입력) >> ");
		System.out.println();
		System.out.println("--------------------------------");
	   	System.out.println("    1번 ~ 3번을 선택해주세요.   ");
	   	System.out.println("--------------------------------");
	   	System.out.println();
		
	}
	
	public void revWrite() {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║       인사고과 등록           ║");
		System.out.println("  ╠═══════════════════════════║");
		System.out.println("  ║ 각 항목당 점수 : 0 ~ 20점      ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("      < 점수를 입력해주세요 >  ");
		System.out.println();
		System.out.println("  1.직원번호 >> ");
		System.out.println("  2.관리능력 : 업무 우선순위 선정 및 위기상황 대처 능력의 정도");
		System.out.println("  💡 >> ");
		System.out.println("  3.유대관계: 구성원 및 타부서 간의 의사소통과 협업 여부");	
		System.out.println("  💡 >> ");
		System.out.println("  4.책임감 : 담당 일을 책임감 있게 수행하고 그 결과에 대하여 책임을 지는 태도");
		System.out.println("  💡 >> ");
		System.out.println("  5.근면성 : 성실 근면한 자세로 업무에 임하고 있는지의 여부 (지각,조퇴,결근 반영)");
		System.out.println("  💡 >> ");
		System.out.println("  6.업무지식 : 담당업무 수행에 필요한 전문지식의 정도");
		System.out.println("  💡 >> ");
		System.out.println();
		System.out.println("--------------------------------");
		System.out.println("         등록되었습니다.        ");
		System.out.println("--------------------------------");
		System.out.println("--------------------------------");
		System.out.println("       등록에 실패했습니다.     ");
		System.out.println("--------------------------------");
		System.out.println();
		
	}
	
	public void revModify(String emid) {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║       인사 고과 수정          ║");
		System.out.println("  ╠═══════════════════════════║");
		System.out.println("  ║ 각 항목당 점수 : 0 ~ 20점      ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
		System.out.println("    < 수정할 내용을 입력해주세요 >  ");
		System.out.println();
		System.out.println("  1.관리능력 : 업무 우선순위 선정 및 위기상황 대처 능력의 정도");
		System.out.println("  💡 >> ");
		System.out.println("  2.유대관계: 구성원 및 타부서 간의 의사소통과 협업 여부");	
		System.out.println("  💡 >> ");
		System.out.println("  3.책임감 : 담당 일을 책임감 있게 수행하고 그 결과에 대하여 책임을 지는 태도");
		System.out.println("  💡 >> ");
		System.out.println("  4.근면성 : 성실 근면한 자세로 업무에 임하고 있는지의 여부 (지각,조퇴,결근 반영)");
		System.out.println("  💡 >> ");
		System.out.println("  5.업무지식 : 담당업무 수행에 필요한 전문지식의 정도");
		System.out.println("  💡 >> ");
		System.out.println();
		System.out.println("--------------------------------");
		System.out.println("         수정되었습니다.        ");
		System.out.println("--------------------------------");
		System.out.println("--------------------------------");
		System.out.println("        수정에 실패했습니다.    ");
		System.out.println("--------------------------------");
	   	System.out.println("--------------------------------");
	   	System.out.println("         취소되었습니다.      ");
	   	System.out.println("--------------------------------");
		System.out.println();
		
	}
	
	public void revRemove(String emid) {
		System.out.println("  ╔═══════════════════════════╗");  // 2칸씩
		System.out.println("  ║       인사 고과 삭제          ║");
		System.out.println("  ╚═══════════════════════════╝");
		System.out.println();
    	System.out.println(" < 삭제하려면 Y를 그렇지 않으면 N을 입력해주세요 >");
    	System.out.println();
		System.out.println("  💡 입력 >> ");
		System.out.println();
		System.out.println("--------------------------------");
		System.out.println("         삭제되었습니다.         ");
		System.out.println("--------------------------------");
	   	System.out.println("--------------------------------");
	   	System.out.println("         취소되었습니다.          ");
	   	System.out.println("--------------------------------");	   	
	   	System.out.println();
		
	}	
	

//	System.out.println("--------------------------------");
//	System.out.println("  💡 시스템을 종료하시겠습니까? ( Y | N )");
//	System.out.println("  💡 >> ");
//	System.out.println("--------------------------------");
//  System.out.println("       1번이나 2번을 선택하세요.     ");
//  System.out.println("--------------------------------");
	
}
