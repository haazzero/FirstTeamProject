--복붙하기 전에 해야할 일-
--hrdd 계정 생성해야함--
--sys계정에서 view만드는 권한 줘야함--

/*Create USER*/
CREATE USER hrdd IDENTIFIED BY 0000;
GRANT RESOURCE, CREATE SESSION TO hrdd;


/* view 권한 */
--GRANT CREATE VIEW TO hrdd--

--이후 hrdd에서 아래 create 시작--



/* Create Sequences */

CREATE SEQUENCE SEQ_JOB_HISTORY_HIS_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_POSITION_PNO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_REVIEW_REVIEW_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_SALARY_PAYMENT_SALPAY_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_YEARS_YEARS_NO INCREMENT BY 1 START WITH 1;
CREATE SEQUENCE SEQ_SALARY_INFO_SALINFO_NO INCREMENT BY 1 START WITH 1;


/* Create Tables */

-- 로그인 계정
CREATE TABLE HR_SYSTEM
(
   -- 아이디
   ID varchar2(30) NOT NULL,
   -- 비밀번호
   PW varchar2(30) NOT NULL,
   PRIMARY KEY (ID)
);

-- 직원 정보
CREATE TABLE EMPLOYEES
(
   -- 직원번호
   EMID varchar2(10) NOT NULL,
   -- 직원이름
   NAME varchar2(30) NOT NULL,
   -- 직급이름
   POSITION varchar2(10) NOT NULL,
   -- 부서이름
   DNAME varchar2(30) NOT NULL,
   -- 생년월일
   BIRTH varchar2(30) NOT NULL,
   -- 전화번호
   TEL varchar2(30) NOT NULL,
   -- 성별
   GEN varchar2(10) NOT NULL,
   -- 입사일자
   JOIN varchar2(30) NOT NULL,
   -- 호봉
   SAL_GRADE number NOT NULL,
   -- 주소
   ADDR varchar2(50) ,
   PRIMARY KEY (EMID)
);


-- 히스토리
CREATE TABLE JOB_HISTORY
(
   -- 히스토리 번호
   HIS_NO number NOT NULL,
   -- 직원번호
   EMID varchar2(10) NOT NULL,
   -- 부서이름
   DNAME varchar2(30) NOT NULL,
   -- 직급이름
   POSITION varchar2(10) NOT NULL,
   -- 시작일자
   LEAVESTART varchar2(30) NOT NULL,
   -- 종료일자
   LEAVEFIN varchar2(30) NOT NULL,
   -- 구분
   REMARK varchar2(100) NOT NULL,
   PRIMARY KEY (HIS_NO)
);

-- 부서
CREATE TABLE DEPARTMENTS
(
   -- 부서번호
   DNO varchar2(10) NOT NULL,
   -- 부서이름
   DNAME varchar2(30) NOT NULL UNIQUE,
   PRIMARY KEY (DNO)
);

-- 직급
CREATE TABLE POSITION
(
   -- 직급번호
   PNO number NOT NULL,
   -- 직급이름
   POSITION varchar2(10) NOT NULL UNIQUE,
   PRIMARY KEY (PNO)
);


-- 인사고과 기록
CREATE TABLE REVIEW
(
   -- 인사고과번호
   REVIEW_NO number NOT NULL,
   -- 직원번호
   EMID varchar2(10) NOT NULL,
   -- 평가항목1
   EVAL1 number NOT NULL,
   -- 평가항목2
   EVAL2 number NOT NULL,
   -- 평가항목3
   EVAL3 number NOT NULL,
   -- 평가항목4
   EVAL4 number NOT NULL,
   -- 평가항목5
   EVAL5 number NOT NULL,
   -- 평가 총점수
   EVAL_TOT number NOT NULL,
   -- 평가 등급
   GRADE varchar2(10) NOT NULL,
   -- 비고
   REMARK varchar2(100),
   -- 평가일자
   EVAL_DATE varchar2(30) NOT NULL,
   PRIMARY KEY (REVIEW_NO)
);


-- 급여 정보
CREATE TABLE SALARY_INFO
(
   -- 급여정보번호
   SALINFO_NO number NOT NULL,
   -- 직원번호
   EMID varchar2(10) NOT NULL,
   -- 은행명
   BANK varchar2(30) NOT NULL,
   -- 예금주
   DEPOSITOR varchar2(30) NOT NULL,
   -- 계좌번호
   ACCOUNT varchar2(30) NOT NULL,
   PRIMARY KEY (EMID)
);

-- 급여 지급 내역
CREATE TABLE SALARY_PAYMENT
(
   -- 급여지급번호
   SALPAY_NO number NOT NULL,
   -- 직원번호
   EMID varchar2(10) NOT NULL,
   -- 급여지급일자
   PAY_DATE varchar2(30) NOT NULL,
   -- 상여금
   BONUS number NOT NULL,
   -- 총급여
   TOTAL number NOT NULL,
   PRIMARY KEY (SALPAY_NO)
);


-- 호봉
CREATE TABLE SALARY_STEP
(
   -- 호봉
   SAL_GRADE number NOT NULL,
   -- 직급이름
   POSITION varchar2(10) NOT NULL,
   -- 기본급
   SAL number NOT NULL,
   PRIMARY KEY (SAL_GRADE, POSITION)
);


-- 근태 기록
CREATE TABLE WORK
(
   -- 직원번호
   EMID varchar2(10) NOT NULL,
   -- 근속년수
   CONT number NOT NULL,
   -- 지각일수
   LATE number NOT NULL,
   -- 조퇴일수
   EARLY number NOT NULL,
   -- 결근일수
   ABS number NOT NULL,
   -- 사용가능연차일수
   AV_ANN number NOT NULL,
   -- 사용한연차일수
   USED_ANN number NOT NULL,
   -- 잔여연차일수
   UNUSED_ANN number NOT NULL,
   PRIMARY KEY (EMID)
);


-- 연차 승인 내역
CREATE TABLE YEARS
(
   -- 연차승인번호
   YEARS_NO number NOT NULL,
   -- 직원번호
   EMID varchar2(10) NOT NULL,
   -- 연차사용일자
   YEARS_DATE varchar2(30) NOT NULL,
   -- 연차사용일수
   YEARS_CNT number NOT NULL,
   -- 연차승인자
   APP varchar2(30) NOT NULL,
   -- 연차승인일자
   APP_DATE varchar2(30) NOT NULL,
   PRIMARY KEY (YEARS_NO)
);



/* Create Foreign Keys */

ALTER TABLE EMPLOYEES
   ADD FOREIGN KEY (DNAME)
   REFERENCES DEPARTMENTS (DNAME)
;


ALTER TABLE JOB_HISTORY
   ADD FOREIGN KEY (DNAME)
   REFERENCES DEPARTMENTS (DNAME)
;


ALTER TABLE JOB_HISTORY
   ADD FOREIGN KEY (EMID)
   REFERENCES EMPLOYEES (EMID)
;


ALTER TABLE REVIEW
   ADD FOREIGN KEY (EMID)
   REFERENCES EMPLOYEES (EMID)
;

ALTER TABLE SALARY_INFO
   ADD FOREIGN KEY (EMID)
   REFERENCES EMPLOYEES (EMID)
;

ALTER TABLE SALARY_PAYMENT
   ADD FOREIGN KEY (EMID)
   REFERENCES EMPLOYEES (EMID)
;


ALTER TABLE WORK
   ADD FOREIGN KEY (EMID)
   REFERENCES EMPLOYEES (EMID)
;


ALTER TABLE YEARS
   ADD FOREIGN KEY (EMID)
   REFERENCES EMPLOYEES (EMID)
;


ALTER TABLE EMPLOYEES
	ADD FOREIGN KEY (SAL_GRADE, POSITION)
	REFERENCES SALARY_STEP (SAL_GRADE, POSITION)
;


ALTER TABLE JOB_HISTORY
   ADD FOREIGN KEY (POSITION)
   REFERENCES POSITION (POSITION)
;


ALTER TABLE SALARY_STEP
   ADD FOREIGN KEY (POSITION)
   REFERENCES POSITION (POSITION)
;


/* Create view */
CREATE OR REPLACE VIEW review_view AS
SELECT grade, remark, review.emid
FROM review
JOIN salary_payment sp ON review.emid = sp.emid;



--마스터 테이블들--
--초기 로그인 계정
INSERT INTO hr_system VALUES('admin', '1234');
INSERT INTO hr_system VALUES('admin2', '5678');
INSERT INTO hr_system VALUES('admin3', '9999');

--부서
INSERT INTO departments VALUES ('D1','생산팀');

INSERT INTO departments VALUES ('D2','인사팀');

INSERT INTO departments VALUES ('D3', '품질팀');

INSERT INTO departments VALUES ('D4', '경리팀');

--직급
insert into position values(SEQ_POSITION_PNO.NEXTVAL,'부장');

insert into position values(SEQ_POSITION_PNO.NEXTVAL,'과장');

insert into position values(SEQ_POSITION_PNO.NEXTVAL,'대리');

insert into position values(SEQ_POSITION_PNO.NEXTVAL,'사원');

--호봉
INSERT INTO SALARY_STEP VALUES (1,'부장',4000000);

INSERT INTO SALARY_STEP VALUES (1,'과장',3500000);

INSERT INTO SALARY_STEP VALUES (1,'대리',3000000);

INSERT INTO SALARY_STEP VALUES (1,'사원',2500000);

INSERT INTO SALARY_STEP VALUES (2,'부장',4100000);

INSERT INTO SALARY_STEP VALUES (2,'과장',3600000);

INSERT INTO SALARY_STEP VALUES (2,'대리',3100000);

INSERT INTO SALARY_STEP VALUES (2,'사원',2600000);

INSERT INTO SALARY_STEP VALUES (3,'부장',4200000);

INSERT INTO SALARY_STEP VALUES (3,'과장',3700000);

INSERT INTO SALARY_STEP VALUES (3,'대리',3200000);

INSERT INTO SALARY_STEP VALUES (3,'사원',2700000);

INSERT INTO SALARY_STEP VALUES (4,'부장',4300000);

INSERT INTO SALARY_STEP VALUES (4,'과장',3800000);

INSERT INTO SALARY_STEP VALUES (4,'대리',3300000);

INSERT INTO SALARY_STEP VALUES (4,'사원',2800000);

INSERT INTO SALARY_STEP VALUES (5,'부장',4400000);

INSERT INTO SALARY_STEP VALUES (5,'과장',3900000);

INSERT INTO SALARY_STEP VALUES (5,'대리',3400000);

INSERT INTO SALARY_STEP VALUES (5,'사원',2900000);
